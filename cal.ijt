LABTITLE=: 'CAL - the TABULA engine'
LABDEPENDS=: 'math/cal numeric plot'

NB. =========================================================
Lab Section INTRO
CAL is the engine for TABULA.
It constructs "ttables" (TABULA-tables),
and saves and reloads them.
It is command-driven via a single "keyhole",
the verb: tabengine
)

require 'math/cal'
tt=: tabengine_cal_    NB. handy way to send it instructions

tt 'VERSION'    NB. --fails because not initialized.

NB. =========================================================
Lab Section INTRO2
CAL needs initializing before it responds to instructions...
)

start_cal_ ''
tt 'VERSION'

NB. =========================================================
Lab Section DISP1
To load the SAMPLE ttable, issue the command 'samp'.
 ++ Display the currently loaded ttable with CTAB or CTBU.
 ++ Display its filename with TNAM.
 ++ Display its caption with TITL ...
)

tt 'samp'
tt 'TNAM'
tt 'TITL'
$ z=: tt 'CTAB'
z

NB. =========================================================
Lab Section DISP2
CTAB returns a 2D display in unicode wide chars.
But CTBU returns a LF-separated utf-8 string, as needed by
JWD to display in a JWD listview or editm control.
)

$ z=: tt 'CTBU'
z

(datatype z) ; ($z) ; (LF e. z) ; z=: tt 'CTAB'

(datatype z) ; ($z) ; (LF e. z) ; >cutopen z=: tt 'CTBU'

NB. =========================================================
Lab Section CMD1
All CAL instructions begin with a 4-letter command,
followed by arguments (if the command needs any).
Commands like VERSION, CTAB, CTBU and QUERY ignore everything
in the instruction after the first 4 letters.
)

tt 'VERSION'
tt 'VERS'       NB. the contents of VERSION_cal_
tt 'VER'        NB. --too short

tt 'ABOU'       NB. the contents of ABOUT_cal_

NB. =========================================================
Lab Section CMD2
Commands in UPPERCASE are requests for data,
which is returned by: tabengine...
)

$cmds=: tt 'QCAL'

NB. =========================================================
Lab Section CMD3
Commands in lowercase make changes to the ttable.
For example: newt (new empty ttable) and open.
Since SAMPLE is freely changeable by the user,
let us open an unchanging sample: SAMPLE0 ...
)

tt 'newt'
tt 'open 0'     NB. ditto 'open 1' for SAMPLE1 etc
tt  'CTBU'

NB. =========================================================
Lab Section CMD4
Let us save this loaded ttable as the startup SAMPLE, then
reload the SAMPLE ...
)

tt 'save $$'
tt 'newt'       NB. (just to make sure it's gone)
tt 'open'       NB. no arg means SAMPLE
tt 'CTBU'

NB. =========================================================
Lab Section ITEM1
The most important parameter following the 4-letter command
is the item number.
Let's fetch the main components of item 4 ...
)

tt 'NAME 4'     NB. the item's name
tt 'VALU 4'     NB. the item's value
tt 'FMLA 4'     NB. the item's formula

NB. =========================================================
Lab Section ITEM2
Use corresponding lowercase commands to write back the value
etc of item {1} (and notice how other items changes) ...
)

tt 'name 1 my new name'
tt 'valu 1 2.5'
tt 'VALU 1'
tt 'CTBU'

NB. =========================================================
Lab Section SAVE
Lastly, save the altered ttable in the user library under
your own choice of name ...
)

tt 'sava mytestname'
tt 'TFIL'     NB. full pathname of saved file
